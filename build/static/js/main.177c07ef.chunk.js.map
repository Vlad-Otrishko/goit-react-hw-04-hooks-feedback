{"version":3,"sources":["components/Statistics/Statistics.module.css","components/SectionTitle/SectionTitle.js","components/SectionTitle/SectionTitle.module.css","App.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Notification/Notification.module.css","components/Button/Button.js","components/FeedbackOptions/FeedbackOptions.js","index.js"],"names":["module","exports","SectionTitle","title","children","className","s","wrapper","App","useState","good","setGood","neutral","setNeutral","bad","setBad","handleClick","vote","value","eval","calculateTotalVotes","options","onLeaveFeedback","total","positivePercentage","Number","toFixed","message","Statistics","records","Notification","Button","name","type","onClick","FeedbackOptions","map","el","nextId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,cAAgB,kCAAkC,uBAAuB,yCAAyC,0BAA0B,4CAA4C,KAAO,2B,+BCDvP,gCAaeC,IARM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC7B,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,qBAAIF,UAAaC,IAAEH,MAAnB,cAA4BA,KAC1BC,O,gBCRRJ,EAAOC,QAAU,CAAC,QAAU,8BAA8B,MAAQ,8B,2nCCQ5DO,IAAM,SAANA,MACJ,cAAwBC,oDAAS,GAAjC,mMAAOC,KAAP,cAAaC,QAAb,cACA,WAA8BF,oDAAS,GAAvC,oMAAOG,QAAP,cAAgBC,WAAhB,cACA,WAAsBJ,oDAAS,GAA/B,oMAAOK,IAAP,cAAYC,OAAZ,cAEMC,YAAc,SAAdA,YAAcC,MAClB,IAAKC,MAAQC,KAAKF,MAClB,OAAQA,MACN,IAAK,OACHN,QAAQO,MAAQ,GAChB,MACF,IAAK,UACHL,WAAWK,MAAQ,GACnB,MACF,IAAK,MACHH,OAAOG,MAAQ,GACf,MACF,QACE,SAGAE,oBAAsB,WAC1B,OAAOV,KAAOI,IAAMF,SAEtB,OACE,6EACE,2DAAC,qEAAD,CAAcT,MAAM,yBAApB,SACE,2DAAC,2EAAD,CACEkB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBN,gBAGrB,2DAAC,qEAAD,CAAcb,MAAM,aAApB,SACGiB,sBACC,2DAAC,iEAAD,CACEV,KAAMA,KACNE,QAASA,QACTE,IAAKA,IACLS,MAAOb,KAAOI,IAAMF,QACpBY,mBAAoBC,QAAQf,KAAOU,sBAAwB,KAAKM,QAAQ,MAG1E,2DAAC,qEAAD,CAAcC,QAAQ,4BAOjBnB,2B,gBCzDfR,EAAOC,QAAU,CAAC,eAAe,sCAAsC,kBAAkB,yCAAyC,cAAc,uC,8BCDhJ,gCAkBe2B,IAfI,SAAC,GAAqD,IAAnDlB,EAAkD,EAAlDA,KAAME,EAA4C,EAA5CA,QAASE,EAAmC,EAAnCA,IAAKS,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,mBAC7C,OACE,mCACI,qBAAInB,UAAWC,IAAEuB,QAAjB,UACE,qBAAIxB,UAAWC,IAAC,cAAhB,mBAA0CI,KAC1C,qBAAIL,UAAWC,IAAC,cAAhB,qBAA4CM,KAC5C,qBAAIP,UAAWC,IAAC,cAAhB,iBAAwCQ,KACxC,qBAAIT,UAAWC,IAAE,wBAAjB,mBAAiDiB,KACjD,qBAAIlB,UAAS,UAAKC,IAAE,wBAAP,YAAkCA,IAAE,4BAAjD,iCACuBkB,EADvB,e,6BCXZ,iCAQeM,IAJM,SAAC,GAAiB,IAAfH,EAAc,EAAdA,QACtB,OACE,oBAAItB,UAAWC,IAAEqB,QAAjB,SAA4BA,M,gBCLhC3B,EAAOC,QAAU,CAAC,QAAU,gC,qECUb8B,EAPA,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAM3B,EAAqC,EAArCA,UAAWiB,EAA0B,EAA1BA,gBAAgBL,EAAU,EAAVA,KACjD,OACE,wBAAQgB,KAAK,SAAS5B,UAAWA,EAAY6B,QAAS,kBAAIZ,EAAgBL,IAA1E,SACGe,K,iBCeQG,IAdS,SAAC,GAAiC,IAA/Bd,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAClC,OACE,mCACGD,EAAQe,KAAI,SAAAC,GAAE,OACb,cAAC,EAAD,CACEL,KAAMK,EAENhC,UAAWC,IAAE,WAAD,OAAY+B,IACxBf,gBAAiBA,EACjBL,KAAMoB,GAHDC,c,6BCdf,iEAKAC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.177c07ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"records\":\"Statistics_records__47hYh\",\"records__item\":\"Statistics_records__item__1dz-2\",\"records__item--final\":\"Statistics_records__item--final__2_tp2\",\"records__item--positive\":\"Statistics_records__item--positive__2_aJn\",\"blur\":\"Statistics_blur__3-axo\"};","import React from 'react';\r\nimport s from './SectionTitle.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst SectionTitle = ({ title, children}) => {\r\n  return (\r\n    <section className={s.wrapper}>\r\n      <h2 className = {s.title}> {title}</h2>\r\n      { children}\r\n    </section>\r\n  );\r\n};\r\nexport default SectionTitle;\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SectionTitle_wrapper__woyzi\",\"title\":\"SectionTitle_title__1IstW\"};","\nimport {useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport SectionTitle from './components/SectionTitle/SectionTitle';\nimport Notification from './components/Notification/Notification';\nimport './App.css';\n\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = vote => {\n    let  value = eval(vote);\n    switch (vote) {\n      case 'good':\n        setGood(value + 1);\n        break;\n      case 'neutral':\n        setNeutral(value + 1);\n        break;\n      case 'bad':\n        setBad(value + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const calculateTotalVotes = () => {\n    return good + bad + neutral;\n   }\n  return (\n    <div>\n      <SectionTitle title=\"Please, leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={handleClick}\n        />\n      </SectionTitle>\n      <SectionTitle title=\"Statistics\">\n        {calculateTotalVotes() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={good + bad + neutral}\n            positivePercentage={Number((good / calculateTotalVotes() * 100).toFixed(2))}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </SectionTitle>\n    </div>\n  );\n}\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button--good\":\"FeedbackOptions_button--good__3rZ1n\",\"button--neutral\":\"FeedbackOptions_button--neutral__2gTVk\",\"button--bad\":\"FeedbackOptions_button--bad__lkkzR\"};","import React from 'react';\r\nimport s from './Statistics.module.css';\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage })=>{\r\n    return (\r\n      <>\r\n          <ul className={s.records}>\r\n            <li className={s[`records__item`]}> Good={good}</li>\r\n            <li className={s[`records__item`]}>Neutral={neutral}</li>\r\n            <li className={s[`records__item`]}>Bad={bad}</li>\r\n            <li className={s[`records__item--final`]}>Total={total}</li>\r\n            <li className={`${s[`records__item--final`]} ${s[`records__item--positive`]}`}>\r\n              Positive Percentage={positivePercentage} %\r\n            </li>\r\n          </ul>\r\n      </>\r\n    );\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}\r\n","import React from 'react';\r\nimport s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <h2 className={s.message}>{ message}</h2>)\r\n}\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__zfLNf\"};","import React from 'react';\r\nimport './Button.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ name, className, onLeaveFeedback,vote}) => {\r\n  return (\r\n    <button type=\"button\" className={className } onClick={()=>onLeaveFeedback(vote)}>\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  onLeaveFeedback: PropTypes.func,\r\n  vote: PropTypes.string,\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\nimport Button from '../Button/Button'\r\nimport nextId from \"react-id-generator\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback}) => {\r\n  return (\r\n    <>\r\n      {options.map(el => (\r\n        <Button\r\n          name={el}\r\n          key={nextId()}\r\n          className={s[`button--${el}`]}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n          vote={el}/>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}